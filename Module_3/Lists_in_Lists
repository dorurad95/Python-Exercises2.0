        #Example #1:
squares = [x ** 2 for x in range(10)]
#The snippet produces a ten-element list filled with squares of ten integer numbers starting from zero (0, 1, 4, 9, 16, 25, 36, 49, 64, 81)

        #Example #2:
twos = [2 ** i for i in range(8)]
#The snippet creates an eight-element array containing the first eight powers of two (1, 2, 4, 8, 16, 32, 64, 128)

        #Example #3:
odds = [x for x in squares if x % 2 != 0 ]
#The snippet makes a list with only the odd elements of the squares list.

#############################################################################################################################################################################
                      Lists in lists: two-dimensional arrays.
Let's also assume that a predefined symbol named EMPTY designates an empty field on the chessboard.
So, if we want to create a list of lists representing the whole chessboard, it may be done in the following way:
board = []

for i in range(8):
    row = [EMPTY for i in range(8)]
    board.append(row)

Note:
the inner part of the loop creates a row consisting of eight elements (each of them equal to EMPTY) and appends it to the board list;
the outer part repeats it eight times;
in total, the board list consists of 64 elements (all equal to EMPTY)


      #The short way:
board = [[EMPTY for i in range(8)] for j in range(8)]

The inner part creates a row, and the outer part builds a list of rows.
